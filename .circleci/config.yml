version: 2

references:
  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

jobs:
  production:
    docker:
      - image: circleci/node:8.11
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/project
      - run:
          name: Install
          command: yarn
      - run:
          name: Deploy production to AWS
          command: |
            ./node_modules/.bin/kes cf deploy \
              --template node_modules/@sat-utils/api/template \
              --deployment prod --showOutputs

  develop:
    machine:
      docker_layer_caching: true
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/project
      - run:
          name: Build Docker image
          command: |
            docker build -t sat-api-deployment:latest . 
      - run:
          name: Deploy develop to AWS
          command: |
            echo AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} >> .env
            echo AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} >> .env
            echo AWS_REGION=${AWS_REGION} >> .env
            docker run --rm -it --env-file .env sat-api-deployment:latest \
              ./node_modules/.bin/kes cf deploy \
              --template node_modules/@sat-utils/api/template \
              --deployment dev --showOutputs

workflows:
  version: 2
  production:
    jobs:
      - production:
          filters:
            branches:
              only: master
  develop:
    jobs:
      - develop:
          filters:
            branches:
              only: develop
